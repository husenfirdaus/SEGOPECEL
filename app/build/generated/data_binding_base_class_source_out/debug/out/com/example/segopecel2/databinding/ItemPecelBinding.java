// Generated by view binder compiler. Do not edit!
package com.example.segopecel2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.segopecel2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPecelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addresstextview;

  @NonNull
  public final TextView drinktextView4;

  @NonNull
  public final TextView nametextView3;

  @NonNull
  public final TextView pricetextView5;

  @NonNull
  public final TextView sidedishtextView4;

  private ItemPecelBinding(@NonNull ConstraintLayout rootView, @NonNull TextView addresstextview,
      @NonNull TextView drinktextView4, @NonNull TextView nametextView3,
      @NonNull TextView pricetextView5, @NonNull TextView sidedishtextView4) {
    this.rootView = rootView;
    this.addresstextview = addresstextview;
    this.drinktextView4 = drinktextView4;
    this.nametextView3 = nametextView3;
    this.pricetextView5 = pricetextView5;
    this.sidedishtextView4 = sidedishtextView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPecelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPecelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_pecel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPecelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addresstextview;
      TextView addresstextview = ViewBindings.findChildViewById(rootView, id);
      if (addresstextview == null) {
        break missingId;
      }

      id = R.id.drinktextView4;
      TextView drinktextView4 = ViewBindings.findChildViewById(rootView, id);
      if (drinktextView4 == null) {
        break missingId;
      }

      id = R.id.nametextView3;
      TextView nametextView3 = ViewBindings.findChildViewById(rootView, id);
      if (nametextView3 == null) {
        break missingId;
      }

      id = R.id.pricetextView5;
      TextView pricetextView5 = ViewBindings.findChildViewById(rootView, id);
      if (pricetextView5 == null) {
        break missingId;
      }

      id = R.id.sidedishtextView4;
      TextView sidedishtextView4 = ViewBindings.findChildViewById(rootView, id);
      if (sidedishtextView4 == null) {
        break missingId;
      }

      return new ItemPecelBinding((ConstraintLayout) rootView, addresstextview, drinktextView4,
          nametextView3, pricetextView5, sidedishtextView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
